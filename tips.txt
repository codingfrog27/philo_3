11=19=2023

-Note if I want Orlandos slower but slightly safer method at the %2 mini sleep at the start
	I switch left and right for so that there's 0 possibility for any deadlock


-fix proper monitoring locking when death has been discovered
-clean functions and init and parsing
-double check time






06-09-2023

working sofar, time can be done cleaner
Also could give printing different colours depending on the enum given so
we will have different colours for both philos and actions




TODO

-seperate parsing and init
-better logic/structure for time functions (optional but nice?)
-philos currently dont die even if they should, I can starting testing by
dprintfing the mealtimes in monitoring to a seperate file :)






























































1 thread for printing

2 can init philos be a bzero type of function?
3 add malloc fail protection to init philos





data structure questions:

-right now data has an array of philo structs, is this the right way to go about it?







-compiling with sanitize thread
-


-have monitor and printing thread


-have 1 wirting mutex that gets locked every time u wanna msg, and only get ur timestamp after
locking that mutex



-left off at


21-08 went back after nother break, is confusing, at starting simulation now




print lock should be one singular shared cause its to stop printing getting
mixed up

quintescential== meal lock (per philo), 1 per for, 1print lock


use pthread join instead of sleep (or detach(if i do use detach wait
sleep arg time))
